/*
 * This program is free software:
 * you can redistribute it and/or modify it under the terms of the GNU General Public Licenses
 * as published by the Free Software Foundation;
 * either version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with this program.
 * If not, see https://www.gnu.org/licenses/.
 *
 * author: snooze (schizophrenical@pm.me)
 */

#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,kscan = &kscan0;
	zmk,matrix_transform = &default_transform
    };

    kscan0: kscan_0 {
        compatible = "zmk, kscan-gpio-matrix";
	label = "KSCAN";
	diode-direction = "col2row";
	
	// 8x9 GPIO matrix for efficiency.
	// see: https://zmk.dev/docs/development/new-shield#optional-matrix-transform
	row-gpios
	    = <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
	    , <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
	    , <&pro_micro 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
	    , <&pro_micro 18 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
	    , <&pro_micro 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
	    , <&pro_micro 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
	    , <&pro_micro 16 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
	    , <&pro_micro 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
	    ;
	col-gpios
	    = <&pro_micro 0 GPIO_ACTIVE_HIGH>
	    , <&pro_micro 2 GPIO_ACTIVE_HIGH>
	    , <&pro_micro 3 GPIO_ACTIVE_HIGH>
	    , <&pro_micro 4 GPIO_ACTIVE_HIGH>
	    , <&pro_micro 5 GPIO_ACTIVE_HIGH>
	    , <&pro_micro 6 GPIO_ACTIVE_HIGH>
	    , <&pro_micro 7 GPIO_ACTIVE_HIGH>
	    , <&pro_micro 8 GPIO_ACTIVE_HIGH>
	    , <&pro_micro 9 GPIO_ACTIVE_HIGH>
            ;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
	rows = <8>;
	columns = <9>;
//     ----- --- --- --- --- --- ---            --- --- --- --- --- --- -------        ------
//    |  `  | 1 | 2 | 3 | 4 | 5 | 6 |          | 7 | 8 | 9 | 0 | - | = |  DEL  |      |  DEL |
//     ----- --- --- --- --- --- ---            --- --- --- --- --- --- -------        ------
//    ----- --- --- --- --- ---              --- --- --- --- --- --- --- ---           ------
//   | TAB | Q | W | E | R | T |            | Y | U | I | O | P | [ | ] | | |         | PGUP |
//    ----- --- --- --- --- ---              --- --- --- --- --- --- --- ---           ------
//   ------- --- --- --- --- ---               --- --- --- --- --- --- --------        ------
//  |  ESC  | A | S | D | F | G |             | H | J | K | L | ; | ' | RETURN |      | PGDN |
//   ------- --- --- --- --- ---               --- --- --- --- --- --- --------        ------
//  ---------- --- --- --- --- ---          --- --- --- --- --- --- -------    -------
// |   SHFT   | Z | X | C | V | B |        | B | N | M | , | . | / | RSHFT |  |  UP  |
//  ---------- --- --- --- --- ---          --- --- --- --- --- --- -------    ------
//  ------         ----- ------- -----      --------- ------ -----      ------ ------ -------
// | CTRL |       | ALT | SPACE | CMD |    |  BKSPC  | RALT | MO |     | LEFT | DOWN | RIGHT |
//  ------         ----- ------- -----      --------- ------ ----       ------ ------ -------
        map = <
   RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7)   RC(0,8) RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)        RC(1,6)
  RC(3,5) RC(3,4) RC(3,3) RC(3,2) RC(3,1) RC(2,8)          RC(2,7) RC(2,6) RC(2,5) RC(2,4) RC(2,3) RC(2,2) RC(2,1) RC(1,8)  RC(1,7)
 RC(3,6) RC(3,7) RC(3,8) RC(4,1) RC(4,2) RC(4,3)             RC(4,4) RC(4,5) RC(4,6) RC(4,7) RC(4,8) RC(5,1) RC(5,2)        RC(5,3)
RC(7,1) RC(6,8) RC(6,7) RC(6,6) RC(6,5) RC(6,4)            RC(6,3) RC(6,2) RC(6,1) RC(5,8) RC(5,7) RC(5,6) RC(5,5)  RC(5,4)
RC(7,2)          RC(7,3)    RC(7,4)    RC(7,5)             RC(7,6) RC(7,7) RC(7,8)                          RC(8,1) RC(8,2) RC(8,3)
	>;
    };
};

// vi: ft=devicetree
